labs(y = "", title="Ocupación hotelera", x = "", caption = "<span style='color:  #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
theme(axis.text.x = element_text(size=8,angle=45,vjust = 0.5), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5), axis.line = element_line(color='BLACK'), legend.title = element_blank(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(), axis.ticks.x = element_blank())
ocupacion
ocupacion<- hoteleria  %>%  ggplot(aes(x=periodo,y=`Porcentaje de habitaciones ocupadas`))+
geom_line(color="#0c8136",size=1)+
scale_y_continuous(labels=percent_format(),limits=c(0,0.8),breaks = seq(0,0.8,0.20))+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks = seq(as.Date('2017-01-01') ,as.Date('2021-09-01'),120))+
labs(y = "", title="Ocupación hotelera", x = "", caption = "<span style='color:  #5f6368;'>Fuente: Elaboración propia con datos obtenidos de INDEC.</span>") +
theme(axis.text.x = element_text(size=8,angle=45,vjust = 0.5), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5), axis.line = element_line(color='BLACK'), legend.title = element_blank(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(), axis.ticks.x = element_blank())
ocupacion
knitr::opts_chunk$set(echo = FALSE,warning = F,message=F, dev="cairo_pdf")
library(tidyverse)
library(readxl)
library(ggplot2)
library(extrafont)
library(ggtext)
library(scales)
library(ggpubr)
library(seasonal)
#Fuente
font_import(paths = "~/GitHub/sector-energia/Open_Sans",prompt=F)
loadfonts(device = "win", quiet=T)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
colores_oscuros <- c("#053b19", "#b77409", "#a11550", "#1680ab", "#085222",  "#1891c2")
colores_claros <- c("#13c753",  "#f7be61", "#eb659d", "#6dc8ed", "#10b04a", "#56bfea")
#Dirección de descarga
#'https://cammesaweb.cammesa.com/download/base-informe-mensual-2021-08/?wpdmdl=40504&refresh=615afafb2ecd41633352443',temp
energia<- read_excel('BASE_DEMANDA_INFORME_MENSUAL_2021-08.xlsx',sheet=2)
energia<-energia[-c(seq(1,22,1)), ]
energia<- energia[1:12]
names(energia)<- energia[1,]
energia<- energia[-1,]
energia$MES<- as.numeric(energia$MES)
energia$MES<-as.Date(energia$MES,origin='1899-12-31')
energia$`DEMANDA [MWh]`<-as.numeric(energia$`DEMANDA [MWh]`)
energia.corrientes<- energia %>% mutate(fecha=as.Date(paste0(lubridate::year(MES),'-',  lubridate::month(MES),'-','01'))) %>%  filter(PROVINCIA=='CORRIENTES') %>% group_by(fecha) %>% summarize(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
#Proceso de desestacionalizacion por consumidores
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.comercial<- energia.comercial %>% select(-MES)
det.energia.comercial<- ts(energia.comercial, start=c(2018,01), end=c(2021,08), frequency=12)
det.energia.comercial<- seas(det.energia.comercial,outlier = NULL)
#plot(det.energia.comercial)
#print(udg(det.energia.comercial))
periodo<- seq(as.Date('2018-01-01'),as.Date('2021-08-01'),by='month')
periodo<- data.frame(periodo)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
det.energia.comercial<- bind_cols(periodo,det.energia.comercial)
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia.industrial %>% select(-MES)
det.energia.industrial<- ts(energia.industrial,start=c(2018,01), end=c(2021,08), frequency=12)
det.energia.industrial<- seas(det.energia.industrial,outlier = NULL)
det.energia.industrial<- data.frame(det.energia.industrial$data[,1])
det.energia.industrial<- bind_cols(periodo,det.energia.industrial)
#Residencial
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia.residencial %>% select(-MES)
det.energia.residencial<- ts(energia.residencial, start=c(2018,01),end=c(2021,08),frequency = 12)
det.energia.residencial <- seas(det.energia.residencial,outlier=NULL)
det.energia.residencial<- data.frame(det.energia.residencial$data[,1])
det.energia.residencial<- bind_cols(periodo, det.energia.residencial)
det.energia.total<-bind_cols(det.energia.comercial,det.energia.industrial,det.energia.residencial)
det.energia.total<- det.energia.total[, -c(3,5)]
colnames(det.energia.total)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
det.energia.total$`demanda total desestacionalizada`<- det.energia.total$`demanda comercial`+ det.energia.total$`demanda industrial`+det.energia.total$`demanda residencial`
energia.total<- bind_cols(det.energia.total, energia.corrientes)
energia.total<- energia.total %>%  select(-fecha...6)
colnames(energia.total)<- c("fecha", "demanda comercial dest", "demanda industrial dest", "demanda residencial dest", "demanda total dest", "demanda total")
energia<- read_excel('BASE_DEMANDA_INFORME_MENSUAL_2021-12.xlsx',sheet=2)
energia<-energia[-c(seq(1,22,1)), ]
energia<- energia[1:12]
names(energia)<- energia[1,]
energia<- energia[-1,]
energia$MES<- as.numeric(energia$MES)
energia$MES<-as.Date(energia$MES,origin='1899-12-31')
energia$`DEMANDA [MWh]`<-as.numeric(energia$`DEMANDA [MWh]`)
energia.corrientes<- energia %>% mutate(fecha=as.Date(paste0(lubridate::year(MES),'-',  lubridate::month(MES),'-','01'))) %>%  filter(PROVINCIA=='CORRIENTES') %>% group_by(fecha) %>% summarize(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.comercial<- energia.comercial %>% select(-MES)
det.energia.comercial<- ts(energia.comercial, start=c(2018,01), end=c(2021,08), frequency=12)
det.energia.comercial<- seas(det.energia.comercial,outlier = NULL)
#Dirección de descarga
#'https://cammesaweb.cammesa.com/download/base-informe-mensual-2021-08/?wpdmdl=40504&refresh=615afafb2ecd41633352443',temp
energia<- read_excel('BASE_DEMANDA_INFORME_MENSUAL_2021-12.xlsx',sheet=2)
energia<-energia[-c(seq(1,22,1)), ]
energia<- energia[1:12]
names(energia)<- energia[1,]
energia<- energia[-1,]
energia$MES<- as.numeric(energia$MES)
energia$MES<-as.Date(energia$MES,origin='1899-12-31')
energia$`DEMANDA [MWh]`<-as.numeric(energia$`DEMANDA [MWh]`)
energia.corrientes<- energia %>% mutate(fecha=as.Date(paste0(lubridate::year(MES),'-',  lubridate::month(MES),'-','01'))) %>%  filter(PROVINCIA=='CORRIENTES') %>% group_by(fecha) %>% summarize(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
#Proceso de desestacionalizacion por consumidores
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.comercial<- energia.comercial %>% select(-MES)
det.energia.comercial<- ts(energia.comercial, start=c(2018,01), end=c(2021,08), frequency=12)
det.energia.comercial<- seas(det.energia.comercial,outlier = NULL)
#plot(det.energia.comercial)
#print(udg(det.energia.comercial))
periodo<- seq(as.Date('2018-01-01'),as.Date('2021-08-01'),by='month')
periodo<- data.frame(periodo)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
det.energia.comercial<- bind_cols(periodo,det.energia.comercial)
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia.industrial %>% select(-MES)
det.energia.industrial<- ts(energia.industrial,start=c(2018,01), end=c(2021,08), frequency=12)
det.energia.industrial<- seas(det.energia.industrial,outlier = NULL)
det.energia.industrial<- data.frame(det.energia.industrial$data[,1])
det.energia.industrial<- bind_cols(periodo,det.energia.industrial)
#Residencial
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia.residencial %>% select(-MES)
det.energia.residencial<- ts(energia.residencial, start=c(2018,01),end=c(2021,08),frequency = 12)
det.energia.residencial <- seas(det.energia.residencial,outlier=NULL)
det.energia.residencial<- data.frame(det.energia.residencial$data[,1])
det.energia.residencial<- bind_cols(periodo, det.energia.residencial)
det.energia.total<-bind_cols(det.energia.comercial,det.energia.industrial,det.energia.residencial)
det.energia.total<- det.energia.total[, -c(3,5)]
colnames(det.energia.total)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
det.energia.total$`demanda total desestacionalizada`<- det.energia.total$`demanda comercial`+ det.energia.total$`demanda industrial`+det.energia.total$`demanda residencial`
energia.total<- bind_cols(det.energia.total, energia.corrientes)
energia<- read_excel('BASE_DEMANDA_INFORME_MENSUAL_2021-12.xlsx',sheet=2)
energia<- read_excel('BASE_DEMANDA_INFORME_MENSUAL_2021-12.xlsx',sheet=2)
View(energia)
energia<-energia[-c(seq(1,22,1)), ]
energia<- energia[1:12]
names(energia)<- energia[1,]
energia<- energia[-1,]
energia$MES<- as.numeric(energia$MES)
energia$MES<-as.Date(energia$MES,origin='1899-12-31')
energia$`DEMANDA [MWh]`<-as.numeric(energia$`DEMANDA [MWh]`)
energia.corrientes<- energia %>% mutate(fecha=as.Date(paste0(lubridate::year(MES),'-',  lubridate::month(MES),'-','01'))) %>%  filter(PROVINCIA=='CORRIENTES') %>% group_by(fecha) %>% summarize(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
View(energia.corrientes)
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.comercial<- energia.comercial %>% select(-MES)
det.energia.comercial<- ts(energia.comercial, start=c(2018,01), end=c(2021,08), frequency=12)
det.energia.comercial<- seas(det.energia.comercial,outlier = NULL)
plot(det.energia.comercial)
periodo<- seq(as.Date('2018-01-01'),as.Date('2021-08-01'),by='month')
periodo<- data.frame(periodo)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
det.energia.comercial<- bind_cols(periodo,det.energia.comercial)
View(det.energia.comercial)
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia.industrial %>% select(-MES)
det.energia.industrial<- ts(energia.industrial,start=c(2018,01), end=c(2021,08), frequency=12)
det.energia.industrial<- seas(det.energia.industrial,outlier = NULL)
det.energia.industrial<- seas(det.energia.industrial,outlier = NULL)
det.energia.industrial<- ts(energia.industrial,start=c(2018,01), end=c(2021,08), frequency=12)
det.energia.industrial<- seas(det.energia.industrial,outlier = NULL)
det.energia.industrial<- data.frame(det.energia.industrial$data[,1])
det.energia.industrial<- bind_cols(periodo,det.energia.industrial)
#Residencial
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia.residencial %>% select(-MES)
det.energia.residencial<- ts(energia.residencial, start=c(2018,01),end=c(2021,08),frequency = 12)
det.energia.residencial <- seas(det.energia.residencial,outlier=NULL)
det.energia.residencial<- data.frame(det.energia.residencial$data[,1])
det.energia.residencial<- bind_cols(periodo, det.energia.residencial)
det.energia.total<-bind_cols(det.energia.comercial,det.energia.industrial,det.energia.residencial)
det.energia.total<- det.energia.total[, -c(3,5)]
colnames(det.energia.total)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
det.energia.total$`demanda total desestacionalizada`<- det.energia.total$`demanda comercial`+ det.energia.total$`demanda industrial`+det.energia.total$`demanda residencial`
energia.total<- bind_cols(det.energia.total, energia.corrientes)
View(det.energia.total)
View(energia.corrientes)
#Dirección de descarga
#'https://cammesaweb.cammesa.com/download/base-informe-mensual-2021-08/?wpdmdl=40504&refresh=615afafb2ecd41633352443',temp
energia<- read_excel('BASE_DEMANDA_INFORME_MENSUAL_2021-12.xlsx',sheet=2)
energia<-energia[-c(seq(1,22,1)), ]
energia<- energia[1:12]
names(energia)<- energia[1,]
energia<- energia[-1,]
energia$MES<- as.numeric(energia$MES)
energia$MES<-as.Date(energia$MES,origin='1899-12-31')
energia$`DEMANDA [MWh]`<-as.numeric(energia$`DEMANDA [MWh]`)
energia.corrientes<- energia %>% mutate(fecha=as.Date(paste0(lubridate::year(MES),'-',  lubridate::month(MES),'-','01'))) %>%  filter(PROVINCIA=='CORRIENTES') %>% group_by(fecha) %>% summarize(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
#Proceso de desestacionalizacion por consumidores
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.comercial<- energia.comercial %>% select(-MES)
det.energia.comercial<- ts(energia.comercial, start=c(2018,01), end=c(2021,12), frequency=12)
det.energia.comercial<- seas(det.energia.comercial,outlier = NULL)
#plot(det.energia.comercial)
#print(udg(det.energia.comercial))
periodo<- seq(as.Date('2018-01-01'),as.Date('2021-08-01'),by='month')
periodo<- data.frame(periodo)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
det.energia.comercial<- bind_cols(periodo,det.energia.comercial)
det.energia.total<-bind_cols(det.energia.comercial,det.energia.industrial,det.energia.residencial)
periodo<- seq(as.Date('2018-01-01'),as.Date('2021-12-01'),by='month')
periodo<- data.frame(periodo)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
det.energia.comercial<- bind_cols(periodo,det.energia.comercial)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
View(energia.comercial)
energia.comercial<- energia.comercial %>% select(-MES)
det.energia.comercial<- ts(energia.comercial, start=c(2018,01), end=c(2021,12), frequency=12)
det.energia.comercial
det.energia.comercial<- seas(det.energia.comercial,outlier = NULL)
View(det.energia.comercial)
periodo<- seq(as.Date('2018-01-01'),as.Date('2021-12-01'),by='month')
periodo<- data.frame(periodo)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
View(det.energia.comercial)
det.energia.comercial<- bind_cols(periodo,det.energia.comercial)
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia.industrial %>% select(-MES)
det.energia.industrial<- ts(energia.industrial,start=c(2018,01), end=c(2021,12), frequency=12)
det.energia.industrial<- seas(det.energia.industrial,outlier = NULL)
det.energia.industrial<- data.frame(det.energia.industrial$data[,1])
det.energia.industrial<- bind_cols(periodo,det.energia.industrial)
#Residencial
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia.residencial %>% select(-MES)
det.energia.residencial<- ts(energia.residencial, start=c(2018,01),end=c(2021,12),frequency = 12)
det.energia.residencial <- seas(det.energia.residencial,outlier=NULL)
det.energia.residencial <- seas(det.energia.residencial,outlier=NULL)
#Residencial
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia.residencial %>% select(-MES)
det.energia.residencial<- ts(energia.residencial, start=c(2018,01),end=c(2021,12),frequency = 12)
det.energia.residencial <- seas(det.energia.residencial,outlier=NULL)
det.energia.residencial<- data.frame(det.energia.residencial$data[,1])
det.energia.residencial<- bind_cols(periodo, det.energia.residencial)
det.energia.total<-bind_cols(det.energia.comercial,det.energia.industrial,det.energia.residencial)
det.energia.total<- det.energia.total[, -c(3,5)]
colnames(det.energia.total)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
det.energia.total$`demanda total desestacionalizada`<- det.energia.total$`demanda comercial`+ det.energia.total$`demanda industrial`+det.energia.total$`demanda residencial`
energia.total<- bind_cols(det.energia.total, energia.corrientes)
energia.total<- energia.total %>%  select(-fecha...6)
colnames(energia.total)<- c("fecha", "demanda comercial dest", "demanda industrial dest", "demanda residencial dest", "demanda total dest", "demanda total")
ggplot(energia.total)+
geom_line(mapping=aes(x=fecha,y=`demanda total`),group=1,size=1, color="#29aee4")+
geom_line(aes(x=fecha,y=`demanda total dest`),size=1, color="#0c8136" )+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2021-09-01'),120))+
scale_y_continuous(limits=c(0,400000),breaks = c(seq(0,500000,50000)))+
labs(y = "MWh", title="Demanda de energía <span style = 'color: #29aee4;'>**estacionalizada**</span> y <span style='color: #0c8136;'>**desestacionalizada**</span>", x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"),plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
ggplot(energia.total)+
geom_line(mapping=aes(x=fecha,y=`demanda total`),group=1,size=1, color="#29aee4")+
geom_line(aes(x=fecha,y=`demanda total dest`),size=1, color="#0c8136" )+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,400000),breaks = c(seq(0,500000,50000)))+
labs(y = "MWh", title="Demanda de energía <span style = 'color: #29aee4;'>**estacionalizada**</span> y <span style='color: #0c8136;'>**desestacionalizada**</span>", x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"),plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
View(energia.total)
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.consumidores<- bind_cols(energia.comercial,energia.industrial,energia.residencial)
energia.consumidores<- energia.consumidores[,-c(3,5)]
colnames(energia.consumidores)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
ggplot(energia.consumidores)+
geom_line(aes(x= fecha, y=`demanda comercial`),group=1,size=1, color= "#0c8136")+
geom_line(aes(x= fecha, y=`demanda industrial`),group=1,size=1, color= "#e22172")+
geom_line(aes(x= fecha, y=`demanda residencial`),group=1,size=1, color="#dbac2f")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2021-09-01'),120))+
scale_y_continuous(limits=c(0,250000),breaks = c(seq(0,500000,50000)))+
labs(y = "MWh", title="Demanda de energía por consumidores <br> <span style = 'color: #dbac2f;'>**residenciales**</span>, <span style='color: #0c8136;'>**comerciales**</span> e <span style='color: #e22172;'>**industriales**</span> " , x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"),        plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK",      family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
ggplot(det.energia.total)+
geom_line(aes(x=fecha,y=`demanda residencial`),size=1,group=1,color="#dbac2f")+
geom_line(aes(x=fecha, y=`demanda comercial`),size=1,group=1,color="#0c8136")+
geom_line(aes(x=fecha, y=`demanda industrial`),size=1,group=1,color="#e22172")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2021-09-01'),120))+
scale_y_continuous(limits=c(0,200000),breaks = c(seq(0,200000,25000)))+
labs(y = "MWh", title="Demanda de energía desestacionalizada por consumidores <br> <span style = 'color: #dbac2f;'>**residenciales**</span>, <span style='color: #0c8136;'>**comerciales**</span> e <span style='color: #e22172;'>**industriales**</span> " , x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5, angle=45), text = element_text(family = "Open Sans"),        plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK",      family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
ggplot(det.energia.total)+
geom_line(aes(x=fecha,y=`demanda residencial`),size=1,group=1,color="#dbac2f")+
geom_line(aes(x=fecha, y=`demanda comercial`),size=1,group=1,color="#0c8136")+
geom_line(aes(x=fecha, y=`demanda industrial`),size=1,group=1,color="#e22172")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,200000),breaks = c(seq(0,200000,25000)))+
labs(y = "MWh", title="Demanda de energía desestacionalizada por consumidores <br> <span style = 'color: #dbac2f;'>**residenciales**</span>, <span style='color: #0c8136;'>**comerciales**</span> e <span style='color: #e22172;'>**industriales**</span> " , x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5, angle=45), text = element_text(family = "Open Sans"),        plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK",      family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
ggplot(energia.consumidores)+
geom_line(aes(x= fecha, y=`demanda comercial`),group=1,size=1, color= "#0c8136")+
geom_line(aes(x= fecha, y=`demanda industrial`),group=1,size=1, color= "#e22172")+
geom_line(aes(x= fecha, y=`demanda residencial`),group=1,size=1, color="#dbac2f")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,250000),breaks = c(seq(0,500000,50000)))+
labs(y = "MWh", title="Demanda de energía por consumidores <br> <span style = 'color: #dbac2f;'>**residenciales**</span>, <span style='color: #0c8136;'>**comerciales**</span> e <span style='color: #e22172;'>**industriales**</span> " , x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"),        plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK",      family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
knitr::opts_chunk$set(echo = FALSE,warning = F,message=F, dev="cairo_pdf")
library(tidyverse)
library(readxl)
library(ggplot2)
library(extrafont)
library(ggtext)
library(scales)
library(ggpubr)
library(seasonal)
#Fuente
font_import(paths = "~/GitHub/sector-energia/Open_Sans",prompt=F)
loadfonts(device = "win", quiet=T)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
colores_oscuros <- c("#053b19", "#b77409", "#a11550", "#1680ab", "#085222",  "#1891c2")
colores_claros <- c("#13c753",  "#f7be61", "#eb659d", "#6dc8ed", "#10b04a", "#56bfea")
#Dirección de descarga
#'https://cammesaweb.cammesa.com/download/base-informe-mensual-2021-08/?wpdmdl=40504&refresh=615afafb2ecd41633352443',temp
energia<- read_excel('BASE_DEMANDA_INFORME_MENSUAL_2021-12.xlsx',sheet=2)
energia<-energia[-c(seq(1,22,1)), ]
energia<- energia[1:12]
names(energia)<- energia[1,]
energia<- energia[-1,]
energia$MES<- as.numeric(energia$MES)
energia$MES<-as.Date(energia$MES,origin='1899-12-31')
energia$`DEMANDA [MWh]`<-as.numeric(energia$`DEMANDA [MWh]`)
energia.corrientes<- energia %>% mutate(fecha=as.Date(paste0(lubridate::year(MES),'-',  lubridate::month(MES),'-','01'))) %>%  filter(PROVINCIA=='CORRIENTES') %>% group_by(fecha) %>% summarize(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
#Proceso de desestacionalizacion por consumidores
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.comercial<- energia.comercial %>% select(-MES)
det.energia.comercial<- ts(energia.comercial, start=c(2018,01), end=c(2021,12), frequency=12)
det.energia.comercial<- seas(det.energia.comercial,outlier = NULL)
#plot(det.energia.comercial)
#print(udg(det.energia.comercial))
periodo<- seq(as.Date('2018-01-01'),as.Date('2021-12-01'),by='month')
periodo<- data.frame(periodo)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
det.energia.comercial<- bind_cols(periodo,det.energia.comercial)
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia.industrial %>% select(-MES)
det.energia.industrial<- ts(energia.industrial,start=c(2018,01), end=c(2021,12), frequency=12)
det.energia.industrial<- seas(det.energia.industrial,outlier = NULL)
det.energia.industrial<- data.frame(det.energia.industrial$data[,1])
det.energia.industrial<- bind_cols(periodo,det.energia.industrial)
#Residencial
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia.residencial %>% select(-MES)
det.energia.residencial<- ts(energia.residencial, start=c(2018,01),end=c(2021,12),frequency = 12)
det.energia.residencial <- seas(det.energia.residencial,outlier=NULL)
det.energia.residencial<- data.frame(det.energia.residencial$data[,1])
det.energia.residencial<- bind_cols(periodo, det.energia.residencial)
det.energia.total<-bind_cols(det.energia.comercial,det.energia.industrial,det.energia.residencial)
det.energia.total<- det.energia.total[, -c(3,5)]
colnames(det.energia.total)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
det.energia.total$`demanda total desestacionalizada`<- det.energia.total$`demanda comercial`+ det.energia.total$`demanda industrial`+det.energia.total$`demanda residencial`
energia.total<- bind_cols(det.energia.total, energia.corrientes)
energia.total<- energia.total %>%  select(-fecha...6)
colnames(energia.total)<- c("fecha", "demanda comercial dest", "demanda industrial dest", "demanda residencial dest", "demanda total dest", "demanda total")
ggplot(energia.total)+
geom_line(mapping=aes(x=fecha,y=`demanda total`),group=1,size=1, color="#29aee4")+
geom_line(aes(x=fecha,y=`demanda total dest`),size=1, color="#0c8136" )+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,400000),breaks = c(seq(0,500000,50000)))+
labs(y = "MWh", title="Demanda de energía <span style = 'color: #29aee4;'>**estacionalizada**</span> y <span style='color: #0c8136;'>**desestacionalizada**</span>", x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"),plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.consumidores<- bind_cols(energia.comercial,energia.industrial,energia.residencial)
energia.consumidores<- energia.consumidores[,-c(3,5)]
colnames(energia.consumidores)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
ggplot(energia.consumidores)+
geom_line(aes(x= fecha, y=`demanda comercial`),group=1,size=1, color= "#0c8136")+
geom_line(aes(x= fecha, y=`demanda industrial`),group=1,size=1, color= "#e22172")+
geom_line(aes(x= fecha, y=`demanda residencial`),group=1,size=1, color="#dbac2f")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,250000),breaks = c(seq(0,500000,50000)))+
labs(y = "MWh", title="Demanda de energía por consumidores <br> <span style = 'color: #dbac2f;'>**residenciales**</span>, <span style='color: #0c8136;'>**comerciales**</span> e <span style='color: #e22172;'>**industriales**</span> " , x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"),        plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK",      family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
ggplot(det.energia.total)+
geom_line(aes(x=fecha,y=`demanda residencial`),size=1,group=1,color="#dbac2f")+
geom_line(aes(x=fecha, y=`demanda comercial`),size=1,group=1,color="#0c8136")+
geom_line(aes(x=fecha, y=`demanda industrial`),size=1,group=1,color="#e22172")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,200000),breaks = c(seq(0,200000,25000)))+
labs(y = "MWh", title="Demanda de energía desestacionalizada por consumidores <br> <span style = 'color: #dbac2f;'>**residenciales**</span>, <span style='color: #0c8136;'>**comerciales**</span> e <span style='color: #e22172;'>**industriales**</span> " , x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5, angle=45), text = element_text(family = "Open Sans"),        plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK",      family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
View(det.energia.total)
knitr::opts_chunk$set(echo = TRUE)
precios.2017<- read.csv("precios-eess-2017.csv") %>% filter(provincia=="CORRIENTES" & localidad=="CORRIENTES") %>% mutate(producto2= case_when(producto=="Gas Oil Grado 2" ~ "GASOIL",
producto=="Gas Oil Grado 3" ~ "GASOIL",
producto=="GLPA" ~ "GLPA",
producto=="Nafta (comÃºn) hasta 92 Ron"~"NAFTA COMUN Y SUPER",
producto=="Nafta (sÃºper) entre 92 y 95 Ron" ~ "NAFTA COMUN Y SUPER",
producto=="Nafta (premium) de mÃ¡s de 95 Ron" ~ "NAFTA PREMIUM"))
precios.2017.neto<- precios.2017 %>% group_by(ï..anio, mes, producto2) %>% summarise(precio=mean(precio_surtidor))
precios.2017.neto<- precios.2017.neto %>% pivot_wider(names_from = producto2, values_from = precio)
precios.2017.neto<-precios.2017.neto[,-7 ]
precios.2018<- read.csv("precios-eess-2018.csv") %>% filter(provincia=="CORRIENTES" & localidad=="CORRIENTES") %>% mutate(producto2= case_when(producto=="Gas Oil Grado 2" ~ "GASOIL",
producto=="Gas Oil Grado 3" ~ "GASOIL",
producto=="GLPA" ~ "GLPA",
producto=="Nafta (comÃºn) hasta 92 Ron"~"NAFTA COMUN Y SUPER",
producto=="Nafta (sÃºper) entre 92 y 95 Ron" ~ "NAFTA COMUN Y SUPER",
producto=="Nafta (premium) de mÃ¡s de 95 Ron" ~ "NAFTA PREMIUM"))
precios.2018.neto<- precios.2018 %>% group_by(ï..anio, mes, producto2) %>% summarise(precio=mean(precio_surtidor))
precios.2018.neto<- precios.2018.neto %>% pivot_wider(names_from = producto2, values_from = precio)
precios.2018.neto<-precios.2018.neto[,-7 ]
precios.2019<- read.csv("precios-eess-2019.csv") %>% filter(provincia=="CORRIENTES" & localidad=="CORRIENTES") %>% mutate(producto2= case_when(producto=="Gas Oil Grado 2" ~ "GASOIL",
producto=="Gas Oil Grado 3" ~ "GASOIL",
producto=="GLPA" ~ "GLPA",
producto=="Nafta (comÃºn) hasta 92 Ron"~"NAFTA COMUN Y SUPER",
producto=="Nafta (sÃºper) entre 92 y 95 Ron" ~ "NAFTA COMUN Y SUPER",
producto=="Nafta (premium) de mÃ¡s de 95 Ron" ~ "NAFTA PREMIUM"))
precios.2019.neto<- precios.2019 %>% group_by(ï..anio, mes, producto2) %>% summarise(precio=mean(precio_surtidor))
precios.2019.neto<- precios.2019.neto %>% pivot_wider(names_from = producto2, values_from = precio)
precios.2019.neto<-precios.2019.neto[,-7 ]
precios.2020<- read.csv("precios-eess-2020.csv") %>% filter(provincia=="CORRIENTES" & localidad=="CORRIENTES") %>% mutate(producto2= case_when(producto=="Gas Oil Grado 2" ~ "GASOIL",
producto=="Gas Oil Grado 3" ~ "GASOIL",
producto=="GLPA" ~ "GLPA",
producto=="Nafta (comÃºn) hasta 92 Ron"~"NAFTA COMUN Y SUPER",
producto=="Nafta (sÃºper) entre 92 y 95 Ron" ~ "NAFTA COMUN Y SUPER",
producto=="Nafta (premium) de mÃ¡s de 95 Ron" ~ "NAFTA PREMIUM"))
precios.2020.neto<- precios.2020 %>% group_by(ï..anio, mes, producto2) %>% summarise(precio=mean(precio_surtidor))
precios.2020.neto<- precios.2020.neto %>% pivot_wider(names_from = producto2, values_from = precio)
#precios.2020.neto<-precios.2020.neto[,-7 ]
precios.2021<- read.csv("precios-eess-2021.csv") %>% filter(provincia=="CORRIENTES" & localidad=="CORRIENTES") %>% mutate(producto2= case_when(producto=="Gas Oil Grado 2" ~ "GASOIL",
producto=="Gas Oil Grado 3" ~ "GASOIL",
producto=="GLPA" ~ "GLPA",
producto=="Nafta (comÃºn) hasta 92 Ron"~"NAFTA COMUN Y SUPER",
producto=="Nafta (sÃºper) entre 92 y 95 Ron" ~ "NAFTA COMUN Y SUPER",
producto=="Nafta (premium) de mÃ¡s de 95 Ron" ~ "NAFTA PREMIUM"))
precios.2021.neto<- precios.2021 %>% group_by(ï..anio, mes, producto2) %>% summarise(precio=mean(precio_surtidor))
precios.2021.neto<- precios.2021.neto %>% pivot_wider(names_from = producto2, values_from = precio)
precios.2021.neto<-precios.2021.neto[-11, ]
precios<- bind_rows(precios.2017.neto, precios.2018.neto,precios.2019.neto,precios.2020.neto,precios.2021.neto)
write.csv(precios, "precios.combustibles.csv")
View(precios.2021.neto)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(ggplot2)
library(ggtext)
setwd("~/GitHub/PTA")
PTA<- read_excel("PTA.xlsx",sheet = 1)
View(PTA)
PTA<- read_excel("PTA.xlsx",sheet = 1)
nominaciones<- read_excel("PTA.xlsx",sheet = 2)
View(nominaciones)
nominaciones<- read_excel("PTA.xlsx",sheet = 2)
actores<-  read_excel("PTA.xlsx",sheet = 3)
library(tidyrverse)
library(tidyverse)
library(formattable)
guion.original<- PTA %>%  group_by(guion.orginal) %>% summarise(porcentaje=percent(sum(cantidad)/sum(PTA$cantidad)))
View(guion.original)
reca<- PTA %>% summarise(reca.bud=box.office/budget)
View(reca)
reca<- PTA %>% summarise(title, reca.bud=box.office/budget)
reca
reca %>% ggplot(aes(titulo, reca.bud))+
geom_bar(stat='identity')
reca %>% ggplot(aes(title, reca.bud))+
geom_bar(stat='identity')
reca<- PTA %>% filter(year<2021)%>% summarise(title, reca.bud=box.office/budget)
reca %>% ggplot(aes(title, reca.bud))+
geom_bar(stat='identity')
PTA$title<- factor(PTA$title, levels=PTA$year)
reca<- PTA %>% filter(year<2021)%>% summarise(title, reca.bud=box.office/budget)
reca %>% ggplot(aes(title, reca.bud))+
geom_bar(stat='identity')
PTA<- read_excel("PTA.xlsx",sheet = 1)
nominaciones<- read_excel("PTA.xlsx",sheet = 2)
actores<-  read_excel("PTA.xlsx",sheet = 3)
PTA$title<- factor(PTA$title, levels=PTA$title)
guion.original<- PTA %>%  group_by(guion.orginal) %>% summarise(porcentaje=percent(sum(cantidad)/sum(PTA$cantidad)))
reca<- PTA %>% filter(year<2021)%>% summarise(title, reca.bud=box.office/budget)
reca %>% ggplot(aes(title, reca.bud))+
geom_bar(stat='identity')
reca<- PTA %>% filter(year<2021)%>% summarise(title, reca.bud=box.office/budget) %>%
mutate(perdida= case_when(reca.bud<1 ~ "PERDIDA",
TRUE ~ "GANANCIA"))
reca %>% ggplot(aes(title, reca.bud, fill=perdida))+
geom_bar(stat='identity')
reca<- PTA %>% filter(year<2021)%>% summarise(title, reca.bud=(box.office-budget)/budget) %>%
mutate(perdida= case_when(reca.bud<1 ~ "PERDIDA",
TRUE ~ "GANANCIA"))
reca %>% ggplot(aes(title, reca.bud, fill=perdida))+
geom_bar(stat='identity')
reca<- PTA %>% filter(year<2021)%>% summarise(title, reca.bud=(box.office-budget)/budget) %>%
mutate(perdida= case_when(reca.bud<0 ~ "PERDIDA",
TRUE ~ "GANANCIA"))
reca %>% ggplot(aes(title, reca.bud, fill=perdida))+
geom_bar(stat='identity')
reca<- PTA %>% filter(year<2021)%>% summarise(title, reca.bud=percent((box.office-budget)/budget)) %>%
mutate(perdida= case_when(reca.bud<0 ~ "PERDIDA",
TRUE ~ "GANANCIA"))
reca %>% ggplot(aes(title, reca.bud, fill=perdida))+
geom_bar(stat='identity')
mean(PTA$mejor.semana)
PTA %>% ggplot(aes(title, `cantidad de semanas`))+geom_bar(stat='identity')+
geom_line(aes(title, mejor.semana))
PTA %>% ggplot(aes(title, `cantidad de semanas`))+geom_bar(stat='identity')+
geom_line(aes(title, mejor.semana), group=1)
PTA %>% filter(year<2021)%>% ggplot(aes(title, `cantidad de semanas`))+geom_bar(stat='identity')+
geom_line(aes(title, mejor.semana), group=1)
PTA<- PTA %>% summarise(best.wkd.s.box.office= percent(best.weekend.dom/box.office))
PTA<- read_excel("PTA.xlsx",sheet = 1)
nominaciones<- read_excel("PTA.xlsx",sheet = 2)
actores<-  read_excel("PTA.xlsx",sheet = 3)
PTA$title<- factor(PTA$title, levels=PTA$title)
guion.original<- PTA %>%  group_by(guion.orginal) %>% summarise(porcentaje=percent(sum(cantidad)/sum(PTA$cantidad)))
reca<- PTA %>% filter(year<2021)%>% summarise(title, reca.bud=percent((box.office-budget)/budget)) %>%
mutate(perdida= case_when(reca.bud<0 ~ "PERDIDA",
TRUE ~ "GANANCIA"))
reca %>% ggplot(aes(title, reca.bud, fill=perdida))+
geom_bar(stat='identity')
PTA %>% filter(year<2021)%>% ggplot(aes(title, `cantidad de semanas`))+geom_bar(stat='identity')+
geom_line(aes(title, mejor.semana), group=1)
recaudacion<- PTA %>% summarise(best.wkd.s.box.office= percent(best.weekend.dom/box.office))
recaudacion<- PTA %>% summarise(year, title,best.wkd.s.box.office= percent(best.weekend.dom/box.office))
View(recaudacion)
View(recaudacion)
PTA %>% filter(year<2021)%>% ggplot(aes(title, `cantidad de semanas`))+geom_bar(stat='identity')+
geom_line(aes(title, mejor.semana), group=1)+
coord_flip()
